version: "3.7" 

services:
  db:
    image: mysql:8.0
    volumes:
      - ./db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: dbname
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
      # Previous four lines define the main variables needed for the MySQL container to work: database, database username, database user password, and the MySQL root password.
    ports:
      - "3306:3306"
      
  wordpress:
    user: 1000:1000
    depends_on:
      - db
    image: wordpress:latest
    restart: always
    # Restart line controls the restart mode, meaning if the container stops running for any reason, it will restart the process immediately.
    ports:
      - "80:80"
      # The previous line defines the port that the WordPress container will use. After successful installation, the full path will look like this: http://localhost
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: user
      WORDPRESS_DB_PASSWORD: pass
      WORDPRESS_DB_NAME: dbname
      # db:3306 refers to database container name and port 3306
      
      # debug mode
      WORDPRESS_DEBUG: 1

      # our local dev environment
      WORDPRESS_CONFIG_EXTRA: |

        /* development parameters */
        define('WP_CACHE', false);
        define('ENVIRONMENT', 'local');

        /* do not re-define WP_DEBUG here or it will throw a blank error in the admin */
        /* you can remove this entirely, this is just to show you what not to do */
        // define('WP_DEBUG', true);

        if (!defined('WP_HOME')) {
          /* force our home url */
          define('WP_HOME', 'http://localhost');
          define('WP_SITEURL', WP_HOME);
        }
# Similar to MySQL image variables, the last four lines define the main variables needed for the WordPress container to work properly with the MySQL container.
    volumes:
      ["./:/var/www/html"]